{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _readOnlyError from \"@babel/runtime/helpers/readOnlyError\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport axios from 'axios';\nimport qs from 'qs';\nimport { Buffer } from 'buffer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nglobal.Buffer = Buffer;\nvar SpotifyRecommendations = function SpotifyRecommendations() {\n  var genres = [\"acoustic\", \"afrobeat\", \"alt-rock\", \"alternative\", \"ambient\", \"anime\", \"black-metal\", \"bluegrass\", \"blues\", \"bossanova\", \"brazil\", \"breakbeat\", \"british\", \"cantopop\", \"chicago-house\", \"children\", \"chill\", \"classical\", \"club\", \"comedy\", \"country\", \"dance\", \"dancehall\", \"death-metal\", \"deep-house\", \"detroit-techno\", \"disco\", \"disney\", \"drum-and-bass\", \"dub\", \"dubstep\", \"edm\", \"electro\", \"electronic\", \"emo\", \"folk\", \"forro\", \"french\", \"funk\", \"garage\", \"german\", \"gospel\", \"goth\", \"grindcore\", \"groove\", \"grunge\", \"guitar\", \"happy\", \"hard-rock\", \"hardcore\", \"hardstyle\", \"heavy-metal\", \"hip-hop\", \"holidays\", \"honky-tonk\", \"house\", \"idm\", \"indian\", \"indie\", \"indie-pop\", \"industrial\", \"iranian\", \"j-dance\", \"j-idol\", \"j-pop\", \"j-rock\", \"jazz\", \"k-pop\", \"kids\", \"latin\", \"latino\", \"malay\", \"mandopop\", \"metal\", \"metal-misc\", \"metalcore\", \"minimal-techno\", \"movies\", \"mpb\", \"new-age\", \"new-release\", \"opera\", \"pagode\", \"party\", \"philippines-opm\", \"piano\", \"pop\", \"pop-film\", \"post-dubstep\", \"power-pop\", \"progressive-house\", \"psych-rock\", \"punk\", \"punk-rock\", \"r-n-b\", \"rainy-day\", \"reggae\", \"reggaeton\", \"road-trip\", \"rock\", \"rock-n-roll\", \"rockabilly\", \"romance\", \"sad\", \"salsa\", \"samba\", \"sertanejo\", \"show-tunes\", \"singer-songwriter\", \"ska\", \"sleep\", \"songwriter\", \"soul\", \"soundtracks\", \"spanish\", \"study\", \"summer\", \"swedish\", \"synth-pop\", \"tango\", \"techno\", \"trance\", \"trip-hop\", \"turkish\", \"work-out\", \"world-music\"];\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    token = _useState4[0],\n    setToken = _useState4[1];\n  useEffect(function () {\n    var fetchRecommendations = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var SPOTIFY_CLIENT_ID = 'eed31a43318f478ba48917070c9c3b37';\n        var SPOTIFY_CLIENT_SECRET = '3337a7d23626403399901e0f1e487a98';\n        var auth = Buffer.from(`${SPOTIFY_CLIENT_ID}:${SPOTIFY_CLIENT_SECRET}`).toString('base64');\n        try {\n          var response = yield axios({\n            method: 'post',\n            url: 'https://accounts.spotify.com/api/token',\n            data: qs.stringify({\n              grant_type: 'client_credentials'\n            }),\n            headers: {\n              'Authorization': `Basic ${auth}`,\n              'Content-Type': 'application/x-www-form-urlencoded'\n            }\n          });\n          console.log(response.data.access_token);\n          setToken((response.data.access_token, _readOnlyError(\"token\")));\n        } catch (error) {\n          console.error(error);\n        }\n        try {\n          var randomIndex = Math.floor(Math.random() * genres.length);\n          console.log(token);\n          var _response = yield fetch(`https://api.spotify.com/v1/recommendations?seed_genres=${genres[randomIndex]}`, {\n            method: 'GET',\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          var json = yield _response.json();\n          setData(json);\n        } catch (error) {\n          console.error(error);\n        }\n      });\n      return function fetchRecommendations() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchRecommendations();\n  }, []);\n  return _jsx(View, {\n    children: data ? _jsx(Text, {\n      children: JSON.stringify(data)\n    }) : _jsx(Text, {\n      children: \"Loading...\"\n    })\n  });\n};\nexport default SpotifyRecommendations;","map":{"version":3,"names":["React","useEffect","useState","Text","View","axios","qs","Buffer","jsx","_jsx","global","SpotifyRecommendations","genres","_useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","token","setToken","fetchRecommendations","_ref","_asyncToGenerator","SPOTIFY_CLIENT_ID","SPOTIFY_CLIENT_SECRET","auth","from","toString","response","method","url","stringify","grant_type","headers","console","log","access_token","_readOnlyError","error","randomIndex","Math","floor","random","length","fetch","json","apply","arguments","children","JSON"],"sources":["C:/Users/estudiante/Documents/Aplicaciones/MudsicApp/src/data/spotifyApi.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Text, View } from 'react-native';\r\nimport axios from 'axios';\r\nimport qs from 'qs';\r\nimport { Buffer } from 'buffer';\r\nglobal.Buffer = Buffer;\r\n\r\n\r\n\r\nconst SpotifyRecommendations = () => {\r\n    let genres = [\r\n        \"acoustic\", \"afrobeat\", \"alt-rock\", \"alternative\", \"ambient\", \"anime\", \"black-metal\", \"bluegrass\", \"blues\", \"bossanova\", \"brazil\",\"breakbeat\",\"british\",\"cantopop\",\"chicago-house\",\"children\",\"chill\",\"classical\",\"club\",\"comedy\",\"country\",\"dance\",\"dancehall\",\"death-metal\",\"deep-house\",\"detroit-techno\",\"disco\",\"disney\",\"drum-and-bass\",\"dub\",\"dubstep\",\"edm\",\"electro\",\"electronic\",\"emo\",\"folk\",\"forro\",\"french\",\"funk\",\"garage\",\"german\",\"gospel\",\"goth\",\"grindcore\",\"groove\",\"grunge\",\"guitar\",\"happy\",\"hard-rock\",\"hardcore\",\"hardstyle\",\"heavy-metal\",\"hip-hop\",\"holidays\",\"honky-tonk\",\"house\",\"idm\",\"indian\",\"indie\",\"indie-pop\",\"industrial\",\"iranian\",\"j-dance\",\"j-idol\",\"j-pop\",\"j-rock\",\"jazz\",\"k-pop\",\"kids\",\"latin\",\"latino\",\"malay\",\"mandopop\",\"metal\",\"metal-misc\",\"metalcore\",\"minimal-techno\",\"movies\",\"mpb\",\"new-age\",\"new-release\",\"opera\",\"pagode\",\"party\",\"philippines-opm\",\"piano\",\"pop\",\"pop-film\",\"post-dubstep\",\"power-pop\",\"progressive-house\",\"psych-rock\",\"punk\",\"punk-rock\",\"r-n-b\",\"rainy-day\",\"reggae\",\"reggaeton\",\"road-trip\",\"rock\",\"rock-n-roll\",\"rockabilly\",\"romance\",\"sad\",\"salsa\",\"samba\",\"sertanejo\",\"show-tunes\",\"singer-songwriter\",\"ska\",\"sleep\",\"songwriter\",\"soul\",\"soundtracks\",\"spanish\",\"study\",\"summer\",\"swedish\",\"synth-pop\",\"tango\",\"techno\",\"trance\",\"trip-hop\",\"turkish\",\"work-out\",\"world-music\"\r\n      ]\r\n  const [data, setData] = useState(null);\r\n  const [token, setToken] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchRecommendations = async () => {\r\n      const SPOTIFY_CLIENT_ID = 'eed31a43318f478ba48917070c9c3b37';\r\n      const SPOTIFY_CLIENT_SECRET = '3337a7d23626403399901e0f1e487a98';\r\n\r\n      const auth = Buffer.from(`${SPOTIFY_CLIENT_ID}:${SPOTIFY_CLIENT_SECRET}`).toString('base64');\r\n\r\n      try {\r\n        const response = await axios({\r\n          method: 'post',\r\n          url: 'https://accounts.spotify.com/api/token',\r\n          data: qs.stringify({ grant_type: 'client_credentials' }),\r\n          headers: {\r\n            'Authorization': `Basic ${auth}`,\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n          },\r\n        });\r\n        console.log(response.data.access_token)\r\n        setToken(token = response.data.access_token);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n      try {\r\n        const randomIndex = Math.floor(Math.random() * genres.length);\r\n        console.log(token)\r\n        const response = await fetch(`https://api.spotify.com/v1/recommendations?seed_genres=${genres[randomIndex]}`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n          },\r\n        });\r\n        const json = await response.json();\r\n        setData(json);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchRecommendations();\r\n  }, []);\r\n\r\n  return (\r\n    <View>\r\n      {data ? (\r\n        <Text>{JSON.stringify(data)}</Text>\r\n      ) : (\r\n        <Text>Loading...</Text>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default SpotifyRecommendations;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}